pipeline {
    agent any
    
    stages {
        stage('Checkout') {
            steps {
                // Clonar el repositorio de código
                checkout scm
            }
        }
        
        // stage('Build and Test') {
        //     steps {
        //         dir('services/java-catalog') {
                    
        //             // Construir una imagen Docker
        //             sh 'docker build -t my-gotest-image:latest -f Dockerfile.test .'

        //             sh 'docker run --rm my-gotest-image:latest'
        //         }
        //     }
        // }
        
        stage('Static Code Analysis') {
            steps {
                script {
                    def scannerHome = tool 'sonarqube_5.0'
                    withSonarQubeEnv(installationName: 'aroldev sonarqube') {
                         sh "${scannerHome}/bin/sonar-scanner -Dsonar.projectKey=rocio-project-java -Dsonar.sources=./services/java-catalog -Dsonar.exclusions=**/*Test.java -Dsonar.tests=./services/java-catalog -Dsonar.test.inclusions=**/*Test.java -Dsonar.java.binaries=."
                    }
                }
            }
        }
        
        stage('Docker Image') {
            steps {
                dir('services/java-catalog') {
                    // Construir una imagen Docker
                    sh 'docker build -t rocio17/java-catalog-rocio:latest -f .docker/Dockerfile .' // Ajusta el nombre y la versión
                }
            }
        }
        
        stage('Push to DockerHub') {
            steps {
                dir('services/java-catalog') {
                    // Subir la imagen a DockerHub
                    withCredentials([usernamePassword(credentialsId: 'rocio.dockerhub', usernameVariable: 'DOCKERHUB_USERNAME', passwordVariable: 'DOCKERHUB_PASSWORD')]) {
                        sh 'docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD'
                        sh 'docker push rocio17/java-catalog-rocio:latest' // Ajusta el nombre y la versión
                    }
                }
            }
        }
    }
}
