pipeline {
    agent any
    
    stages {
        stage('Checkout') {
            steps {
                // Clonar el repositorio de código
                checkout scm
            }
        }
        
        stage('Build and Test') {
            steps {
                dir('services/php-progress') {
                    
                    // Construir una imagen Docker
                    sh 'docker build -t testphp -f dev.Dockerfile .'

                    sh 'docker run --rm testphp composer run test'

                }
            }
        }
        
        stage('Static Code Analysis') {
            steps {
                script {
                    def scannerHome = tool 'sonarqube_5.0'
                    withSonarQubeEnv(installationName: 'aroldev sonarqube') {
                        sh "${scannerHome}/bin/sonar-scanner -Dsonar.projectKey=rocio-project-php -Dsonar.sources=./services/php-progress -Dsonar.exclusions=**/*_test.php -Dsonar.tests=./services/php-progress -Dsonar.test.inclusions=**/*_test.php"
                    }
                }
            }
        }
        
        stage('Docker Image') {
            steps {
                dir('services/php-progress') {
                    // Construir una imagen Docker
                    sh 'docker build -t rocio17/php-progress:latest -f Dockerfile .' // Ajusta el nombre y la versión
                }
            }
        }
        
        stage('Push to DockerHub') {
            steps {
                dir('services/php-progress') {
                    // Subir la imagen a DockerHub
                    withCredentials([usernamePassword(credentialsId: 'rocio.dockerhub', usernameVariable: 'DOCKERHUB_USERNAME', passwordVariable: 'DOCKERHUB_PASSWORD')]) {
                        sh 'docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD'
                        sh 'docker push rocio17/php-progress:latest' // Ajusta el nombre y la versión
                    }
                }
            }
        }
    }
}